/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>


&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
 };
&sk {
     release-after-ms = <2000>;
     quick-release;
 };


/ { 
    combos {
        compatible = "zmk,combos";
        combo_esc { 
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp ESC>;
        };
        combo_bksc {
            timeout-ms = <20>;
            key-positions = <23 24>;
            bindings = <&to 3>;
        };
        combo_ent {
            timeout-ms = <20>;
	    key-positions = <14 15>;
            bindings = <&kp RET>;
        };
        combo_1 {
            timeout-ms = <50>;
	    key-positions = <26 27>;
            bindings = <&to 1>;
        };
        combo_3 {
            timeout-ms = <50>;
	    key-positions = <4 5>;
            bindings = <&kp BKSP>;
        };
        caps {
            timeout-ms = <50>;
	    key-positions = <24 25>;
            bindings = <&kp CAPS>;
        };
        rshift {
            timeout-ms = <50>;
	    key-positions = <16 17>;
            bindings = <&sk RSHIFT>;
        };
        osl {
            timeout-ms = <50>;
	    key-positions = <3 5>;
            bindings = <&sl 5>;
        };
        g {
            timeout-ms = <10>;
	    key-positions = <8 9>;
            bindings = <&kp G>;
	    layers = <0>; 
        };
        j {
            timeout-ms = <20>;
	    key-positions = <18 19>;
            bindings = <&kp J>;
	    layers = <0>; 
        };
        p {
            timeout-ms = <20>;
	    key-positions = <12	13>;
            bindings = <&kp P>;
	    layers = <0>; 
        };
        b {
            timeout-ms = <20>;
	    key-positions = <22	23>;
            bindings = <&kp B>;
	    layers = <0>; 
        };
        sqt {
            timeout-ms = <20>;
	    key-positions = <8 9>;
            bindings = <&kp SQT>;
	    layers = <1 5>; 
        };
	dqt {
            timeout-ms = <20>;
	    key-positions = <18 19>;
            bindings = <&kp DQT>;
	    layers = <1 5>; 
        };
        bslh {
            timeout-ms = <20>;
	    key-positions = <12	13>;
            bindings = <&kp BSLH>;
	    layers = <1>; 
        };
        lbkt {
            timeout-ms = <20>;
	    key-positions = <22	23>;
            bindings = <&kp LBKT>;
	    layers = <1>; 
        };
        
        plus {
            timeout-ms = <20>;
	    key-positions = <8 9>;
            bindings = <&kp LS(EQUAL)>; 
	    layers = <2>; 
        };
	prcnt {
            timeout-ms = <20>;
	    key-positions = <18 19>;
            bindings = <&kp PRCNT>;
	    layers = <2>; 
        };
        minus {
            timeout-ms = <20>;
	    key-positions = <12	13>;
            bindings = <&kp MINUS>;
	    layers = <2>; 
        };
        n0 {
            timeout-ms = <20>;
	    key-positions = <22	23>;
            bindings = <&kp N0>;
	    layers = <2>; 
        };
        lalt {
            timeout-ms = <20>;
	    key-positions = <8 9>;
            bindings = <&kp LALT>; 
	    layers = <3>; 
        };
		del {
            timeout-ms = <20>;
	    key-positions = <18 19>;
            bindings = <&kp DEL>;
	    layers = <3>; 
        };
        left {
            timeout-ms = <20>;
	    key-positions = <12	13>;
            bindings = <&kp LEFT>;
	    layers = <3>;
        };
        lclk {
            timeout-ms = <20>;
	    key-positions = <22	23>;
            bindings = <&mkp LCLK>;
	    layers = <3>;
        };


    };

behaviors {
	hm: homerow_mods {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_MODS";
		#binding-cells = <2>;
		tapping-term-ms = <200>;
		quick_tap_ms = <0>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
	};
	hs: homerow_shifts {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_SHIFTS";
		#binding-cells = <2>;
		tapping-term-ms = <150>;
		quick_tap_ms = <0>;
		flavor = "balanced";
		bindings = <&kp>, <&kp>;
	};
	td: tapdance {
		compatible = "zmk,behavior-hold-tap";
		label = "TAPDANCE";
		#binding-cells = <2>;
		tapping-term-ms = <190>;
		quick_tap_ms = <0>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&kp>;
	};
};

keymap {
	compatible = "zmk,keymap";
	
	default_layer {
		bindings = <
			&kp Q 	   	 &kp W 		&kp E		&kp R		&kp T				&kp Y 		&kp U		&kp I		&kp O		&kp P
			&kp A		 &kp S 		&hm LCTRL D	&kp F	 	&kp G		 		&kp H 		&kp J		&hm RCTRL K	&kp L 		&kp SEMI
			&hm LSHIFT Z &kp X		&kp C 		&kp V 		&kp B   			&kp N		&kp M  		&kp COMMA 	&kp PERIOD	&hm RSHIFT SLASH
									&mt LALT ESC &kp BSPC	&lt 1 DEL			&lt 2 RET	&kp SPACE	&kp RALT 
		>;
	};

	lower_layer {
		bindings = <
			&kp N1		&kp N2 		&kp N3		&kp N4		&kp N5				&kp N6 		&kp N7		&kp N8		&kp N9		&kp N0
			&kp GRAVE	&trans		&trans		&trans		&trans	 			&kc LEFT	&kc DOWN	&kc UP		&kc RIGHT	&kc SQT
			&trans		&trans		&trans		&trans		&trans				&kc MINUS	&kc PLUS	&kc LBKT	&kc RBKT	&hm RSHIFT BSLH
									&trans		&trans		&trans				&trans		&trans		&trans
		>;
	};

	raise_layer {
		bindings = <
			&kp F1		&kp F2 		&kp F3		&kp F4		&kp F5				&kp F6 		&kp F7		&kp F8		&kp F9		&kp F10
			&kp F11		&kc F12		&trans		&trans		&trans	 			&trans		&trans		&trans		&trans		&trans
			&bt BT_PRV	&bt BT_NXT 	&bt BT_CLR	&trans		&trans				&trans		&trans		&trans		&trans		&trans
									&trans		&trans		&trans				&trans		&trans		&trans
		>;
	};

	adjust_layer {
		bindings = <
			&kp F1		&kp F2 		&kp F3		&kp F4		&kp F5				&kp F6 		&kp F7		&kp F8		&kp F9		&kp F10
			&kp F11		&kc F12		&trans		&trans		&trans	 			&trans		&trans		&trans		&trans		&trans
			&bt BT_PRV	&bt BT_NXT 	&bt BT_CLR	&trans		&trans				&trans		&trans		&trans		&trans		&trans
									&trans		&trans		&trans				&trans		&trans		&trans
		>;
	};
};
};